language: python
dist: xenial
python:
  - 2.7
  - 3.6

os:
  - linux

sudo: required
services: docker

env:
  global:
    - ERT_SHOW_BACKTRACE=1
    - MB_PYTHON_VERSION=$TRAVIS_PYTHON_VERSION
    - INSTALL_DIR="${TRAVIS_BUILD_DIR}/venv"
    - LD_LIBRARY_PATH="${INSTALL_DIR}/lib:${INSTALL_DIR}/lib64:${LD_LIBRARY_PATH}"
  matrix:
    - TEST_SUITE="-LE SLOW"  # Run all tests not labeled as slow
    - TEST_SUITE="-L SLOW_1" # Run all tests labeled as SLOW in group 1
    - TEST_SUITE="-L SLOW_2" # Run all tests labeled as SLOW in group 2

matrix:
  fast_finish: true
  include:
  - os: osx
    language: generic
    python: 2.7
    env:
    - MB_PYTHON_VERSION=2.7
    - INSTALL_DIR="${TRAVIS_BUILD_DIR}/venv"
    - DYLD_LIBRARY_PATH=${INSTALL_DIR}/lib:${INSTALL_DIR}/lib64:${DYLD_LIBRARY_PATH}"
    - TEST_SUITE=""
  - os: osx
    language: generic
    python: 3.6
    env:
    - MB_PYTHON_VERSION=3.6
    - INSTALL_DIR="${TRAVIS_BUILD_DIR}/venv"
    - DYLD_LIBRARY_PATH=${INSTALL_DIR}/lib:${INSTALL_DIR}/lib64:${DYLD_LIBRARY_PATH}"
    - TEST_SUITE=""

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - george-edison55-precise-backports
      - sourceline: 'ppa:opm/ppa'
    packages:
      - libopm-simulators
      - liblapack-dev
      - valgrind

before_install:
  - git clone https://github.com/matthew-brett/multibuild.git
  - unset -f pushd
  - unset -f popd
  - source multibuild/common_utils.sh
  - source multibuild/travis_steps.sh
  - before_install

install:
  - pip install -r requirements.txt

before_script:
  # For now we have to make install libecl.
  # Remove when it's possible to pip install

  - source .libecl_version
  - git clone https://github.com/equinor/libecl
  - pushd libecl
  - git fetch
  - git checkout tags/$LIBECL_VERSION
  - pip install -r requirements.txt
  - mkdir build
  - pushd build
  - cmake .. -DENABLE_PYTHON=ON
             -DBUILD_APPLICATIONS=ON
             -DINSTALL_CWRAP=OFF
             -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR
             -DCMAKE_PREFIX_PATH=$INSTALL_DIR
             -DCMAKE_C_FLAGS='-Werror=all'
             -DCMAKE_CXX_FLAGS='-Werror -Wno-unused-result'
  - make
  - make install
  - popd;popd

script:
  - export PYTHONPATH="$INSTALL_DIR/lib/python$MB_PYTHON_VERSION/dist-packages:$PYTHONPATH"
  - python -c "import sys; print('\n'.join(sys.path))"
  - mkdir build
  - pushd build
  - ulimit -n 2048
  - cmake .. -DBUILD_TESTS=ON
             -DENABLE_PYTHON=ON
             -DBUILD_APPLICATIONS=ON
             -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR
             -DCMAKE_PREFIX_PATH=$INSTALL_DIR
             -DCMAKE_C_FLAGS='-Werror=all'
             -DCMAKE_CXX_FLAGS='-Wno-unused-result'
  - make
  - make install
  - set -e; python -c "import res"; set +e
  - ctest --output-on-failure $TEST_SUITE
  - pip install pytest
  - pip install pylint
  - pip install mock
  - pip install decorator
  - popd
  - pushd python
  - pytest
